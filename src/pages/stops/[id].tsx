import { useEffect } from 'react'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { makeStyles } from '@material-ui/core/styles'
import Skeleton from '@material-ui/lab/Skeleton'
import Layout from '../../components/layout'
import Search from '../../components/search'
import StopListings from '../../components/stop-listing'
import { useStop } from '../../utils/hooks'
import { PAGE_DATA } from '../../utils/constants'

const useStyles = makeStyles((theme) => ({
    searchButton: {},
    skeleton: {
        margin: theme.spacing(4, 0),
        height: '48px'
    },
    error: {
        color: theme.palette.error.dark,
        fontSize: '1rem',
        fontWeight: 'bold'
    }
}))

export default function Stop() {
    const classes = useStyles()
    const { query } = useRouter()
    const [stopData, updateStopData] = useStop()

    useEffect(() => {
        if (query.id) {
            updateStopData(Number(query.id))
        }
    }, [query, updateStopData])
    
    const title = `${PAGE_DATA.siteDescription}: Stop ${query.id ? query.id : ''}`

    return (
        <Layout title={title}>
            <Head>
                <title>{title}</title>
                <meta name="description" content="Generated by create next app" />
            </Head>
            <section className='stops-id-page'>
                <h2>Stop # {query.id ? query.id : ''}</h2>
                { stopData.error !== null && <p className={classes.error}>Sorry, we were unable to find that stop. Please search again.</p> }
                <Search value={query?.id || ''} />
                { stopData.loading && <Skeleton className={`skeleton ${classes.skeleton}`} variant="text" />}
                { Object.keys(stopData.data).length > 0 && <StopListings nexTripResult={stopData.data as NexTripResult} /> }
            </section>
        </Layout>
    )
}